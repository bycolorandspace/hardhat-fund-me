{
  "address": "0x548650BC4f555fa69532dDDF785B75E13f0529d9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc2a161620275c0f8ecdafb1c396a746615b3f8aae53f1e80cb267fdb5ce0fd6e",
  "receipt": {
    "to": null,
    "from": "0x00ccF63B4BD66d38B2f8b2a65CA0fB3620Ab42F5",
    "contractAddress": "0x548650BC4f555fa69532dDDF785B75E13f0529d9",
    "transactionIndex": 26,
    "gasUsed": "919348",
    "logsBloom": "0x
    "blockHash": "0xc83e2730f740dd5abde4cbd4c02bb1706b3c89e428b49aaaf044977a977d2893",
    "transactionHash": "0xc2a161620275c0f8ecdafb1c396a746615b3f8aae53f1e80cb267fdb5ce0fd6e",
    "logs": [],
    "blockNumber": 11173348,
    "cumulativeGasUsed": "3797323",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
  ],
  "numDeployments": 1,
  "solcInputHash": "108a4511ad7e694025b09275a24de984",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // 1 * 10 ** 10\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) payable {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        // Set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n\\n        //number = 5;\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        // 1e18 == 1* 10 ** 18  == 10000000000000000\\n        // Reverting: undo any action before, and send remaining gas back\\n\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //for loop => (starting index, ending index, step amount */\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //Reset array\\n        funders = new address[](0);\\n\\n        //Actually withdraw money: transfer, send, call\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n\\n        /*transfer*/\\n        payable(msg.sender).transfer(address(this).balance);\\n        /*send*/\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send Failed\\\");\\n        /*call*/\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Recieve, Fallback\\n}\\n\\n/*\\n\\n\\nTransactions - fields \\n\\n- Nonce: transaction count for the account \\n- Gas Price: price per unit of gas (in wei)\\n- To: address thgat the transaction is sent to \\n- Value: amount of wei to send \\n- Data: what to send to the To address\\n- v,r,s: components of transaction signature\\n\\n\\n*/\\n\",\"keccak256\":\"0xa2f5b21d25e17850711d69629812f8cff56b03a1ceca0793ccc9a476aaf1e31b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //ABI\\n        //Address 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // Price of ETH in terms of USD\\n        // 3000.00000000\\n        return uint256(price * 1e10); //1**10 == 10000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xad803a4fbf7aa38698cd7c3f3f1c68a95afdfd12f7361dab70108c488a667c5b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526040516200109f3803806200109f83398181016040528101906100279190610108565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610135565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d5826100aa565b9050919050565b6100e5816100ca565b81146100f057600080fd5b50565b600081519050610102816100dc565b92915050565b60006020828403121561011e5761011d6100a5565b5b600061012c848285016100f3565b91505092915050565b60805160601c610f446200015b600039600081816102d3015261061f0152610f446000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610866565b6105d2565b6040516100d891906108ac565b60405180910390f35b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108ac565b60405180910390f35b34801561011857600080fd5b506101216105f7565b60405161012e9190610926565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061d565b6040516101639190610950565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610997565b610641565b6040516101a09190610950565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068090919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a21565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a610a41565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f990610a9f565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610ae8565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061075c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a8573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b63565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054890610bb4565b60006040518083038185875af1925050503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b50509050806105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610c15565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061065157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068c836106bc565b90506000670de0b6b3a764000085836106a59190610c35565b6106af9190610cbe565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070557600080fd5b505afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d9190610d7c565b5050509150506402540be400816107549190610df7565b915050919050565b8280548282559060005260206000209081019282156107d5579160200282015b828111156107d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077c565b5b5090506107e291906107e6565b5090565b5b808211156107ff5760008160009055506001016107e7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083382610808565b9050919050565b61084381610828565b811461084e57600080fd5b50565b6000813590506108608161083a565b92915050565b60006020828403121561087c5761087b610803565b5b600061088a84828501610851565b91505092915050565b6000819050919050565b6108a681610893565b82525050565b60006020820190506108c1600083018461089d565b92915050565b6000819050919050565b60006108ec6108e76108e284610808565b6108c7565b610808565b9050919050565b60006108fe826108d1565b9050919050565b6000610910826108f3565b9050919050565b61092081610905565b82525050565b600060208201905061093b6000830184610917565b92915050565b61094a81610828565b82525050565b60006020820190506109656000830184610941565b92915050565b61097481610893565b811461097f57600080fd5b50565b6000813590506109918161096b565b92915050565b6000602082840312156109ad576109ac610803565b5b60006109bb84828501610982565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a0b6013836109c4565b9150610a16826109d5565b602082019050919050565b60006020820190508181036000830152610a3a816109fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aaa82610893565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610add57610adc610a70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4d600b836109c4565b9150610b5882610b17565b602082019050919050565b60006020820190508181036000830152610b7c81610b40565b9050919050565b600081905092915050565b50565b6000610b9e600083610b83565b9150610ba982610b8e565b600082019050919050565b6000610bbf82610b91565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bff600b836109c4565b9150610c0a82610bc9565b602082019050919050565b60006020820190508181036000830152610c2e81610bf2565b9050919050565b6000610c4082610893565b9150610c4b83610893565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8457610c83610a70565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc982610893565b9150610cd483610893565b925082610ce457610ce3610c8f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0e81610cef565b8114610d1957600080fd5b50565b600081519050610d2b81610d05565b92915050565b6000819050919050565b610d4481610d31565b8114610d4f57600080fd5b50565b600081519050610d6181610d3b565b92915050565b600081519050610d768161096b565b92915050565b600080600080600060a08688031215610d9857610d97610803565b5b6000610da688828901610d1c565b9550506020610db788828901610d52565b9450506040610dc888828901610d67565b9350506060610dd988828901610d67565b9250506080610dea88828901610d1c565b9150509295509295909350565b6000610e0282610d31565b9150610e0d83610d31565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4c57610e4b610a70565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8957610e88610a70565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec657610ec5610a70565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0357610f02610a70565b5b82820290509291505056fea264697066735822122053bac2d2e1ad6ce777d54d33df69b6f96ab7ec1d78733a3ac075dde45aac6c3b64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610866565b6105d2565b6040516100d891906108ac565b60405180910390f35b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108ac565b60405180910390f35b34801561011857600080fd5b506101216105f7565b60405161012e9190610926565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061d565b6040516101639190610950565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610997565b610641565b6040516101a09190610950565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068090919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a21565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a610a41565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f990610a9f565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610ae8565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061075c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a8573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b63565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054890610bb4565b60006040518083038185875af1925050503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b50509050806105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610c15565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061065157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068c836106bc565b90506000670de0b6b3a764000085836106a59190610c35565b6106af9190610cbe565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070557600080fd5b505afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d9190610d7c565b5050509150506402540be400816107549190610df7565b915050919050565b8280548282559060005260206000209081019282156107d5579160200282015b828111156107d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077c565b5b5090506107e291906107e6565b5090565b5b808211156107ff5760008160009055506001016107e7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083382610808565b9050919050565b61084381610828565b811461084e57600080fd5b50565b6000813590506108608161083a565b92915050565b60006020828403121561087c5761087b610803565b5b600061088a84828501610851565b91505092915050565b6000819050919050565b6108a681610893565b82525050565b60006020820190506108c1600083018461089d565b92915050565b6000819050919050565b60006108ec6108e76108e284610808565b6108c7565b610808565b9050919050565b60006108fe826108d1565b9050919050565b6000610910826108f3565b9050919050565b61092081610905565b82525050565b600060208201905061093b6000830184610917565b92915050565b61094a81610828565b82525050565b60006020820190506109656000830184610941565b92915050565b61097481610893565b811461097f57600080fd5b50565b6000813590506109918161096b565b92915050565b6000602082840312156109ad576109ac610803565b5b60006109bb84828501610982565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a0b6013836109c4565b9150610a16826109d5565b602082019050919050565b60006020820190508181036000830152610a3a816109fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aaa82610893565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610add57610adc610a70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4d600b836109c4565b9150610b5882610b17565b602082019050919050565b60006020820190508181036000830152610b7c81610b40565b9050919050565b600081905092915050565b50565b6000610b9e600083610b83565b9150610ba982610b8e565b600082019050919050565b6000610bbf82610b91565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bff600b836109c4565b9150610c0a82610bc9565b602082019050919050565b60006020820190508181036000830152610c2e81610bf2565b9050919050565b6000610c4082610893565b9150610c4b83610893565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8457610c83610a70565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc982610893565b9150610cd483610893565b925082610ce457610ce3610c8f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0e81610cef565b8114610d1957600080fd5b50565b600081519050610d2b81610d05565b92915050565b6000819050919050565b610d4481610d31565b8114610d4f57600080fd5b50565b600081519050610d6181610d3b565b92915050565b600081519050610d768161096b565b92915050565b600080600080600060a08688031215610d9857610d97610803565b5b6000610da688828901610d1c565b9550506020610db788828901610d52565b9450506040610dc888828901610d67565b9350506060610dd988828901610d67565b9250506080610dea88828901610d1c565b9150509295509295909350565b6000610e0282610d31565b9150610e0d83610d31565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4c57610e4b610a70565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8957610e88610a70565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec657610ec5610a70565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0357610f02610a70565b5b82820290509291505056fea264697066735822122053bac2d2e1ad6ce777d54d33df69b6f96ab7ec1d78733a3ac075dde45aac6c3b64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}